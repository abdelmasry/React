{"ast":null,"code":"var _jsxFileName = \"/Users/abdelrahmanibrahim/Desktop/IBM Full Stack/React/budget-app/ejtos-react_budget_app/src/components/Budget.js\",\n    _s = $RefreshSig$();\n\n/* In Budget.js you will be adding text and value for your budget. \n * You will be importing app context and the useContext hook, and pass your AppContext to it - \n * this is how a component connects to the context in order to get values from global state. \n*/\nimport React, { useContext, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Budget = () => {\n  _s();\n\n  const {\n    budget\n  } = useContext(AppContext);\n  const [newBudget, setNewBudget] = useState(budget);\n\n  const handleBudgetChange = event => {\n    if (budget > rema) setNewBudget(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-secondary\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Budget: \\xA3 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      step: \"10\",\n      max: \"20000\",\n      value: newBudget,\n      onChange: handleBudgetChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 1\n  }, this);\n};\n\n_s(Budget, \"hYxNTiEIXYsjIW2pGly9RSJaJ3I=\");\n\n_c = Budget;\nexport default Budget;\n\nvar _c;\n\n$RefreshReg$(_c, \"Budget\");","map":{"version":3,"names":["React","useContext","useState","AppContext","Budget","budget","newBudget","setNewBudget","handleBudgetChange","event","rema","target","value"],"sources":["/Users/abdelrahmanibrahim/Desktop/IBM Full Stack/React/budget-app/ejtos-react_budget_app/src/components/Budget.js"],"sourcesContent":["/* In Budget.js you will be adding text and value for your budget. \n * You will be importing app context and the useContext hook, and pass your AppContext to it - \n * this is how a component connects to the context in order to get values from global state. \n*/\n\nimport React, { useContext, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\n\nconst Budget = () => {\n    const { budget } = useContext(AppContext);\n    const [newBudget, setNewBudget] = useState(budget);\n    const handleBudgetChange = (event) => {\n        if (budget > rema)\n        setNewBudget(event.target.value);\n    }\n    return (\n<div className='alert alert-secondary'>\n<span>Budget: Â£ </span>\n<input type=\"number\" step=\"10\" max=\"20000\" value={newBudget} onChange={handleBudgetChange}></input>\n</div>\n    );\n};\nexport default Budget;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,uBAA3B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACjB,MAAM;IAAEC;EAAF,IAAaJ,UAAU,CAACE,UAAD,CAA7B;EACA,MAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAACG,MAAD,CAA1C;;EACA,MAAMG,kBAAkB,GAAIC,KAAD,IAAW;IAClC,IAAIJ,MAAM,GAAGK,IAAb,EACAH,YAAY,CAACE,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAZ;EACH,CAHD;;EAIA,oBACJ;IAAK,SAAS,EAAC,uBAAf;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAO,IAAI,EAAC,QAAZ;MAAqB,IAAI,EAAC,IAA1B;MAA+B,GAAG,EAAC,OAAnC;MAA2C,KAAK,EAAEN,SAAlD;MAA6D,QAAQ,EAAEE;IAAvE;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA;IAAA;IAAA;IAAA;EAAA,QADI;AAMH,CAbD;;GAAMJ,M;;KAAAA,M;AAcN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}